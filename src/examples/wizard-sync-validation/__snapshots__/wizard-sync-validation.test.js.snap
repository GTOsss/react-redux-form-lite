// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WizardSyncValidation /> Render WizardSyncValidation 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <WizardSyncValidation>
    <div>
      <Connect(ReduxForm)
        onSubmit={[Function]}
      >
        <ReduxForm
          actions={
            Object {
              "arrayPush": [Function],
              "blur": [Function],
              "change": [Function],
              "changeSubmitted": [Function],
              "focus": [Function],
              "registerField": [Function],
              "registerForm": [Function],
              "removeField": [Function],
              "removeForm": [Function],
              "updateFormState": [Function],
              "updateValidateAndWarningMessages": [Function],
              "updateValidateMessage": [Function],
              "updateValidateMessages": [Function],
              "updateWarningMessage": [Function],
              "updateWarningMessages": [Function],
            }
          }
          formState={
            Object {
              "form": Object {
                "activeField": "",
                "blurred": false,
                "changed": false,
                "errorsMap": Object {},
                "focused": false,
                "hasErrors": false,
                "hasWarnings": false,
                "submitted": false,
                "warningsMap": Object {},
              },
              "meta": Object {
                "firstName": Object {
                  "active": false,
                  "blurred": false,
                  "changed": false,
                  "error": "",
                  "focused": false,
                  "warning": "",
                },
                "lastName": Object {
                  "active": false,
                  "blurred": false,
                  "changed": false,
                  "error": "",
                  "focused": false,
                  "warning": "",
                },
              },
              "values": Object {
                "firstName": undefined,
                "lastName": undefined,
              },
            }
          }
          ownProps={
            Object {
              "onSubmit": [Function],
            }
          }
        >
          <Step1Component
            formActions={
              Object {
                "arrayPush": [Function],
                "blur": [Function],
                "change": [Function],
                "changeSubmitted": [Function],
                "focus": [Function],
                "registerField": [Function],
                "registerForm": [Function],
                "removeField": [Function],
                "removeForm": [Function],
                "updateFormState": [Function],
                "updateValidateAndWarningMessages": [Function],
                "updateValidateMessage": [Function],
                "updateValidateMessages": [Function],
                "updateWarningMessage": [Function],
                "updateWarningMessages": [Function],
              }
            }
            formParams={
              Object {
                "destroyOnUnmount": false,
                "form": "step1",
              }
            }
            formState={
              Object {
                "form": Object {
                  "activeField": "",
                  "blurred": false,
                  "changed": false,
                  "errorsMap": Object {},
                  "focused": false,
                  "hasErrors": false,
                  "hasWarnings": false,
                  "submitted": false,
                  "warningsMap": Object {},
                },
                "meta": Object {
                  "firstName": Object {
                    "active": false,
                    "blurred": false,
                    "changed": false,
                    "error": "",
                    "focused": false,
                    "warning": "",
                  },
                  "lastName": Object {
                    "active": false,
                    "blurred": false,
                    "changed": false,
                    "error": "",
                    "focused": false,
                    "warning": "",
                  },
                },
                "values": Object {
                  "firstName": undefined,
                  "lastName": undefined,
                },
              }
            }
            handleSubmit={[Function]}
          >
            <form
              onSubmit={[Function]}
            >
              <FieldWithContext
                component="input"
                name="firstName"
                placeholder="First Name"
                type="text"
              >
                <Connect(Field)
                  component="input"
                  formContext={
                    Object {
                      "destroyOnUnmount": false,
                      "form": "step1",
                      "updateValidateAndWarnMap": [Function],
                      "validate": [Function],
                      "warn": [Function],
                      "wizard": "wizard",
                    }
                  }
                  name="firstName"
                  placeholder="First Name"
                  type="text"
                >
                  <Field
                    actions={
                      Object {
                        "arrayPush": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "changeSubmitted": [Function],
                        "focus": [Function],
                        "registerField": [Function],
                        "registerForm": [Function],
                        "removeField": [Function],
                        "removeForm": [Function],
                        "updateFormState": [Function],
                        "updateValidateAndWarningMessages": [Function],
                        "updateValidateMessage": [Function],
                        "updateValidateMessages": [Function],
                        "updateWarningMessage": [Function],
                        "updateWarningMessages": [Function],
                      }
                    }
                    component="input"
                    fieldArrayContext={Object {}}
                    formContext={
                      Object {
                        "destroyOnUnmount": false,
                        "form": "step1",
                        "updateValidateAndWarnMap": [Function],
                        "validate": [Function],
                        "warn": [Function],
                        "wizard": "wizard",
                      }
                    }
                    formState={
                      Object {
                        "form": Object {
                          "activeField": "",
                          "blurred": false,
                          "changed": false,
                          "errorsMap": Object {},
                          "focused": false,
                          "hasErrors": false,
                          "hasWarnings": false,
                          "submitted": false,
                          "warningsMap": Object {},
                        },
                        "meta": Object {
                          "firstName": Object {
                            "active": false,
                            "blurred": false,
                            "changed": false,
                            "error": "",
                            "focused": false,
                            "warning": "",
                          },
                          "lastName": Object {
                            "active": false,
                            "blurred": false,
                            "changed": false,
                            "error": "",
                            "focused": false,
                            "warning": "",
                          },
                        },
                        "values": Object {
                          "firstName": undefined,
                          "lastName": undefined,
                        },
                      }
                    }
                    name="firstName"
                    ownProps={
                      Object {
                        "name": "firstName",
                        "placeholder": "First Name",
                        "type": "text",
                      }
                    }
                  >
                    <input
                      name="firstName"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="First Name"
                      type="text"
                      value=""
                    />
                  </Field>
                </Connect(Field)>
              </FieldWithContext>
              <FieldWithContext
                component="input"
                name="lastName"
                placeholder="Last Name"
                type="text"
              >
                <Connect(Field)
                  component="input"
                  formContext={
                    Object {
                      "destroyOnUnmount": false,
                      "form": "step1",
                      "updateValidateAndWarnMap": [Function],
                      "validate": [Function],
                      "warn": [Function],
                      "wizard": "wizard",
                    }
                  }
                  name="lastName"
                  placeholder="Last Name"
                  type="text"
                >
                  <Field
                    actions={
                      Object {
                        "arrayPush": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "changeSubmitted": [Function],
                        "focus": [Function],
                        "registerField": [Function],
                        "registerForm": [Function],
                        "removeField": [Function],
                        "removeForm": [Function],
                        "updateFormState": [Function],
                        "updateValidateAndWarningMessages": [Function],
                        "updateValidateMessage": [Function],
                        "updateValidateMessages": [Function],
                        "updateWarningMessage": [Function],
                        "updateWarningMessages": [Function],
                      }
                    }
                    component="input"
                    fieldArrayContext={Object {}}
                    formContext={
                      Object {
                        "destroyOnUnmount": false,
                        "form": "step1",
                        "updateValidateAndWarnMap": [Function],
                        "validate": [Function],
                        "warn": [Function],
                        "wizard": "wizard",
                      }
                    }
                    formState={
                      Object {
                        "form": Object {
                          "activeField": "",
                          "blurred": false,
                          "changed": false,
                          "errorsMap": Object {},
                          "focused": false,
                          "hasErrors": false,
                          "hasWarnings": false,
                          "submitted": false,
                          "warningsMap": Object {},
                        },
                        "meta": Object {
                          "firstName": Object {
                            "active": false,
                            "blurred": false,
                            "changed": false,
                            "error": "",
                            "focused": false,
                            "warning": "",
                          },
                          "lastName": Object {
                            "active": false,
                            "blurred": false,
                            "changed": false,
                            "error": "",
                            "focused": false,
                            "warning": "",
                          },
                        },
                        "values": Object {
                          "firstName": undefined,
                          "lastName": undefined,
                        },
                      }
                    }
                    name="lastName"
                    ownProps={
                      Object {
                        "name": "lastName",
                        "placeholder": "Last Name",
                        "type": "text",
                      }
                    }
                  >
                    <input
                      name="lastName"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Last Name"
                      type="text"
                      value=""
                    />
                  </Field>
                </Connect(Field)>
              </FieldWithContext>
              <button
                type="button"
              >
                Previous
              </button>
              <button
                type="submit"
              >
                Next
              </button>
            </form>
          </Step1Component>
        </ReduxForm>
      </Connect(ReduxForm)>
    </div>
  </WizardSyncValidation>
</Provider>
`;

exports[`<WizardSyncValidation /> Render WizardSyncValidation: inputs 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value=""
  />,
]
`;

exports[`<WizardSyncValidation /> Render WizardSyncValidation: store of wizard 1`] = `undefined`;

exports[`<WizardSyncValidation /> submit failed on page 1 (render inputs) 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value=""
  />,
]
`;

exports[`<WizardSyncValidation /> submit failed on page 1 (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {
      "firstName": "Field required.",
      "lastName": "Field required.",
    },
    "focused": false,
    "hasErrors": true,
    "hasWarnings": false,
    "submitted": true,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "Field required.",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "Field required.",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "lastName": undefined,
  },
}
`;

exports[`<WizardSyncValidation /> submit failed on page 1, 2 (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "email": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "phone": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "email": undefined,
    "firstName": "test",
    "lastName": "test",
    "phone": undefined,
  },
}
`;

exports[`<WizardSyncValidation /> submit success on 1, failed on 2 (render inputs) 1`] = `
Array [
  <input
    name="dob"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Date of birthday"
    type="text"
    value=""
  />,
  <input
    name="hobby"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Hobby"
    type="text"
    value=""
  />,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1 (action history) 1`] = `
"@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'step1'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'step1', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'step1', field: 'lastName'}
 payload: {value: undefined},
@@react-redux-form-lite/CHANGE
 meta: {form: 'step1', field: 'firstName'}
 payload: {value: 'test'},
@@react-redux-form-lite/UPDATE_VALIDATE_AND_WARNING_MESSAGES
 meta: {form: 'step1'}
 payload: {
	value: {
		errors: {
			firstName: undefined,
			lastName: 'Field required.'
		},
		warnings: {lastName: undefined}
	},
	submitted: undefined
},
@@react-redux-form-lite/CHANGE
 meta: {form: 'step1', field: 'lastName'}
 payload: {value: 'test'},
@@react-redux-form-lite/UPDATE_VALIDATE_AND_WARNING_MESSAGES
 meta: {form: 'step1'}
 payload: {
	value: {
		errors: {firstName: undefined, lastName: undefined},
		warnings: {lastName: undefined}
	},
	submitted: undefined
},
@@react-redux-form-lite/UPDATE_FORM_STATE
 meta: {form: 'step1'}
 payload: {
	value: {
		form: {
			submitted: true,
			focused: false,
			blurred: false,
			changed: true,
			errorsMap: {},
			hasErrors: false,
			hasWarnings: false,
			warningsMap: {},
			activeField: ''
		},
		values: {firstName: 'test', lastName: 'test'},
		meta: {
			firstName: {
				focused: false,
				active: false,
				blurred: false,
				changed: true,
				warning: '',
				error: ''
			},
			lastName: {
				focused: false,
				active: false,
				blurred: false,
				changed: true,
				warning: '',
				error: ''
			}
		}
	}
},
@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'step2'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'step2', field: 'phone'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'step2', field: 'email'}
 payload: {value: undefined}"
`;

exports[`<WizardSyncValidation /> submit success on page 1 (render inputs) 1`] = `
Array [
  <input
    name="phone"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Phone"
    type="text"
    value=""
  />,
  <input
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Email"
    type="text"
    value=""
  />,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1 (store of step1) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": true,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": "test",
    "lastName": "test",
  },
}
`;

exports[`<WizardSyncValidation /> submit success on page 1 (store of step2) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "email": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "phone": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "email": undefined,
    "phone": undefined,
  },
}
`;

exports[`<WizardSyncValidation /> submit success on page 1, 2 (render inputs) 1`] = `
Array [
  <input
    name="dob"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Date of birthday"
    type="text"
    value=""
  />,
  <input
    name="hobby"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Hobby"
    type="text"
    value=""
  />,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1, 2 (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "dob": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "email": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "hobby": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "phone": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "dob": undefined,
    "email": "test",
    "firstName": "test",
    "hobby": undefined,
    "lastName": "test",
    "phone": "test",
  },
}
`;

exports[`<WizardSyncValidation /> submit success on page 1, 2 and click prevent (render inputs) 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value="test"
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value="test"
  />,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1, 2, 3 (onSubmit) 1`] = `
Array [
  Array [
    Object {
      "dob": "test",
      "email": "test",
      "firstName": "test",
      "hobby": "test",
      "lastName": "test",
      "phone": "test",
    },
    Object {
      "form": Object {
        "activeField": "",
        "blurred": false,
        "changed": true,
        "errorsMap": Object {},
        "focused": false,
        "hasErrors": false,
        "hasWarnings": false,
        "submitted": false,
        "warningsMap": Object {},
      },
      "meta": Object {
        "dob": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
        "email": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
        "firstName": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
        "hobby": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
        "lastName": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
        "phone": Object {
          "active": false,
          "blurred": false,
          "changed": true,
          "error": "",
          "focused": false,
          "warning": "",
        },
      },
      "values": Object {
        "dob": "test",
        "email": "test",
        "firstName": "test",
        "hobby": "test",
        "lastName": "test",
        "phone": "test",
      },
    },
    Object {
      "arrayPush": [Function],
      "blur": [Function],
      "change": [Function],
      "changeSubmitted": [Function],
      "focus": [Function],
      "registerField": [Function],
      "registerForm": [Function],
      "removeField": [Function],
      "removeForm": [Function],
      "updateErrorAndWarningMessages": [Function],
      "updateFormState": [Function],
      "updateValidateMessage": [Function],
      "updateValidateMessages": [Function],
      "updateWarningMessage": [Function],
      "updateWarningMessages": [Function],
    },
  ],
]
`;

exports[`<WizardSyncValidation /> submit success on page 1, 2, 3 (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "dob": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "email": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "hobby": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "phone": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "dob": "test",
    "email": "test",
    "firstName": "test",
    "hobby": "test",
    "lastName": "test",
    "phone": "test",
  },
}
`;

exports[`<WizardSyncValidation /> submit success on page 1, failed on 2 and click prevent (render inputs) 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value="test"
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value="test"
  />,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1, failed on 2 and click prevent (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "email": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "Field required.",
      "focused": false,
      "warning": "",
    },
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "phone": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "email": undefined,
    "firstName": "test",
    "lastName": "test",
    "phone": "test",
  },
}
`;

exports[`<WizardSyncValidation /> submit success on page 1, failed on 2, success on 1 (render Fields) 1`] = `
Array [
  <FieldWithContext
    component="input"
    name="phone"
    placeholder="Phone"
    type="text"
  >
    <ConnectFunction
      component="input"
      formContext={
        Object {
          "destroyOnUnmount": false,
          "form": "example",
          "updateValidateAndWarningMap": [Function],
          "validate": [Function],
          "warn": [Function],
        }
      }
      name="phone"
      placeholder="Phone"
      type="text"
    >
      <Field
        actions={
          Object {
            "arrayPush": [Function],
            "blur": [Function],
            "change": [Function],
            "changeSubmitted": [Function],
            "focus": [Function],
            "registerField": [Function],
            "registerForm": [Function],
            "removeField": [Function],
            "removeForm": [Function],
            "updateErrorAndWarningMessages": [Function],
            "updateFormState": [Function],
            "updateValidateMessage": [Function],
            "updateValidateMessages": [Function],
            "updateWarningMessage": [Function],
            "updateWarningMessages": [Function],
          }
        }
        component="input"
        fieldArrayContext={Object {}}
        formContext={
          Object {
            "destroyOnUnmount": false,
            "form": "example",
            "updateValidateAndWarningMap": [Function],
            "validate": [Function],
            "warn": [Function],
          }
        }
        formState={
          Object {
            "form": Object {
              "activeField": "",
              "blurred": false,
              "changed": false,
              "errorsMap": Object {},
              "focused": false,
              "hasErrors": false,
              "hasWarnings": false,
              "submitted": false,
              "warningsMap": Object {},
            },
            "meta": Object {
              "email": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "firstName": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "lastName": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "phone": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
            },
            "values": Object {
              "email": undefined,
              "firstName": "test",
              "lastName": "test",
              "phone": "test",
            },
          }
        }
        name="phone"
        ownProps={
          Object {
            "name": "phone",
            "placeholder": "Phone",
            "type": "text",
          }
        }
      >
        <input
          name="phone"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Phone"
          type="text"
          value="test"
        />
      </Field>
    </ConnectFunction>
  </FieldWithContext>,
  <FieldWithContext
    component="input"
    name="email"
    placeholder="Email"
    type="text"
  >
    <ConnectFunction
      component="input"
      formContext={
        Object {
          "destroyOnUnmount": false,
          "form": "example",
          "updateValidateAndWarningMap": [Function],
          "validate": [Function],
          "warn": [Function],
        }
      }
      name="email"
      placeholder="Email"
      type="text"
    >
      <Field
        actions={
          Object {
            "arrayPush": [Function],
            "blur": [Function],
            "change": [Function],
            "changeSubmitted": [Function],
            "focus": [Function],
            "registerField": [Function],
            "registerForm": [Function],
            "removeField": [Function],
            "removeForm": [Function],
            "updateErrorAndWarningMessages": [Function],
            "updateFormState": [Function],
            "updateValidateMessage": [Function],
            "updateValidateMessages": [Function],
            "updateWarningMessage": [Function],
            "updateWarningMessages": [Function],
          }
        }
        component="input"
        fieldArrayContext={Object {}}
        formContext={
          Object {
            "destroyOnUnmount": false,
            "form": "example",
            "updateValidateAndWarningMap": [Function],
            "validate": [Function],
            "warn": [Function],
          }
        }
        formState={
          Object {
            "form": Object {
              "activeField": "",
              "blurred": false,
              "changed": false,
              "errorsMap": Object {},
              "focused": false,
              "hasErrors": false,
              "hasWarnings": false,
              "submitted": false,
              "warningsMap": Object {},
            },
            "meta": Object {
              "email": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "firstName": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "lastName": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
              "phone": Object {
                "active": false,
                "blurred": false,
                "changed": false,
                "error": "",
                "focused": false,
                "warning": "",
              },
            },
            "values": Object {
              "email": undefined,
              "firstName": "test",
              "lastName": "test",
              "phone": "test",
            },
          }
        }
        name="email"
        ownProps={
          Object {
            "name": "email",
            "placeholder": "Email",
            "type": "text",
          }
        }
      >
        <input
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Email"
          type="text"
          value=""
        />
      </Field>
    </ConnectFunction>
  </FieldWithContext>,
]
`;

exports[`<WizardSyncValidation /> submit success on page 1, failed on 2, success on 1 (render inputs) 1`] = `
Array [
  <input
    name="phone"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Phone"
    type="text"
    value="test"
  />,
  <input
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Email"
    type="text"
    value=""
  />,
]
`;
