// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UnmountForm /> Render UnmountForm (action history) 1`] = `
"@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'lastName'}
 payload: {value: undefined},
@@react-redux-form-lite/REMOVE_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REMOVE_FIELD
 meta: {form: 'example', field: 'firstName'},
@@react-redux-form-lite/REMOVE_FIELD
 meta: {form: 'example', field: 'lastName'}"
`;

exports[`<UnmountForm /> Render UnmountForm (inputs) 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value=""
  />,
]
`;

exports[`<UnmountForm /> Render UnmountForm (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "lastName": undefined,
  },
}
`;

exports[`<UnmountForm /> Render UnmountForm after unmount form 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <UnmountForm>
    <div>
      <button
        onClick={[Function]}
        type="button"
      >
        Toggle show form
      </button>
    </div>
  </UnmountForm>
</Provider>
`;

exports[`<UnmountForm /> Unmount form (store) 1`] = `Object {}`;

exports[`<UnmountForm /> Unmount form and mount form (action history) 1`] = `
"@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'lastName'}
 payload: {value: undefined},
@@react-redux-form-lite/REMOVE_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REMOVE_FIELD
 meta: {form: 'example', field: 'firstName'},
@@react-redux-form-lite/REMOVE_FIELD
 meta: {form: 'example', field: 'lastName'},
@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'lastName'}
 payload: {value: undefined}"
`;

exports[`<UnmountForm /> Unmount form and mount form (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "lastName": undefined,
  },
}
`;
