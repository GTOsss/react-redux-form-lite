// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UnmountField /> Render UnmountField (inputs) 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="withLastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="checkbox"
    value=""
  />,
]
`;

exports[`<UnmountField /> Render UnmountField: inputs 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="withLastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="checkbox"
    value=""
  />,
]
`;

exports[`<UnmountField /> Render UnmountField: inputs after change 1`] = `
Array [
  <input
    name="firstName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    name="withLastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="checkbox"
    value={true}
  />,
  <input
    name="lastName"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Last Name"
    type="text"
    value=""
  />,
]
`;

exports[`<UnmountField /> Render UnmountField: store 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": false,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "withLastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "withLastName": undefined,
  },
}
`;

exports[`<UnmountField /> UnmountField: mount field (action history) 1`] = `
"@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'withLastName'}
 payload: {value: undefined},
@@react-redux-form-lite/CHANGE
 meta: {form: 'example', field: 'withLastName'}
 payload: {value: true},
@@react-redux-form-lite/UPDATE_VALIDATE_AND_WARNING_MESSAGES
 meta: {form: 'example'}
 payload: {
	value: {
		errors: {lastName: 'Field required.'},
		warnings: {}
	},
	submitted: undefined
},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'lastName'}
 payload: {value: undefined}"
`;

exports[`<UnmountField /> UnmountField: mount field (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "lastName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "withLastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "lastName": undefined,
    "withLastName": true,
  },
}
`;

exports[`<UnmountField /> UnmountField: mount field, add error and then remove it (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "withLastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "withLastName": false,
  },
}
`;

exports[`<UnmountField /> UnmountField: mount field, add warning and then remove it (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "withLastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "withLastName": false,
  },
}
`;

exports[`<UnmountField /> UnmountField: render with field and then remove it (action history) 1`] = `
"@@react-redux-form-lite/REGISTER_FORM
 meta: {form: 'example'},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'firstName'}
 payload: {value: undefined},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'withLastName'}
 payload: {value: undefined},
@@react-redux-form-lite/CHANGE
 meta: {form: 'example', field: 'withLastName'}
 payload: {value: true},
@@react-redux-form-lite/UPDATE_VALIDATE_AND_WARNING_MESSAGES
 meta: {form: 'example'}
 payload: {
	value: {
		errors: {lastName: 'Field required.'},
		warnings: {}
	},
	submitted: undefined
},
@@react-redux-form-lite/REGISTER_FIELD
 meta: {form: 'example', field: 'lastName'}
 payload: {value: undefined},
@@react-redux-form-lite/CHANGE
 meta: {form: 'example', field: 'withLastName'}
 payload: {value: false},
@@react-redux-form-lite/UPDATE_VALIDATE_AND_WARNING_MESSAGES
 meta: {form: 'example'}
 payload: {
	value: {
		errors: {lastName: 'Field required.'},
		warnings: {}
	},
	submitted: undefined
},
@@react-redux-form-lite/REMOVE_FIELD
 meta: {form: 'example', field: 'lastName'}"
`;

exports[`<UnmountField /> UnmountField: render with field and then remove it (store) 1`] = `
Object {
  "form": Object {
    "activeField": "",
    "blurred": false,
    "changed": true,
    "errorsMap": Object {},
    "focused": false,
    "hasErrors": false,
    "hasWarnings": false,
    "submitted": false,
    "warningsMap": Object {},
  },
  "meta": Object {
    "firstName": Object {
      "active": false,
      "blurred": false,
      "changed": false,
      "error": "",
      "focused": false,
      "warning": "",
    },
    "withLastName": Object {
      "active": false,
      "blurred": false,
      "changed": true,
      "error": "",
      "focused": false,
      "warning": "",
    },
  },
  "values": Object {
    "firstName": undefined,
    "withLastName": false,
  },
}
`;
